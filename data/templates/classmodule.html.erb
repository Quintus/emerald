<%############ Class/Module title #############%>
<% if classmod.module? %>
  <h1 class="classmodule module"><span class="leader">Module</span> <%= classmod.full_name %></h1>
<% else %>
  <h1 class="classmodule"><span class="leader">Class</span> <%= classmod.full_name %></h1>
  <p class="superclass">
    <% klass = classmod.superclass %>
    <% if klass.kind_of?(String) %>
      Parent: <%= klass %>
    <% else %>
      Parent: <a href="<%= root_path + rdocize_classmod(klass) %>"><%= klass.full_name %></a>
    <% end %>
  </p>
<% end %>

<%############ Method overview #############%>
<% unless classmod.method_list.empty? %>
  <div class="method-overview">
    <p>Method List</p>
    <ul>
      <% classmod.each_method do |method| %>
        <li>
          <a href="#<%= method.aref %>"><%= method.pretty_name %></a>
        </li>
      <% end %>
    </ul>
  </div>
<% end %>

<%############ Description #############%>
<%= classmod.description %>
<div class="clear"><!-- Long method lists shouldn't hang into the remaining docs --></div>

<%############ Includes #############%>
<% unless classmod.includes.empty? %>
  <h2 id="includes">Includes</h2>
  <ul>
    <% classmod.includes.each do |inc| %>
      <li>
        <% result = inc.module %>
        <% if result.kind_of?(String) %>
          <%= result %>
        <% else %>
          <a href="<%= root_path + rdocize_classmod(result) %>"><%= result.full_name %></a>
        <% end %>
      </li>
    <% end %>
  </ul>
<% end %>

<%############ Constants #############%>
<% unless classmod.constants.empty? %>
  <h2 id="constants">Constants</h2>
  <table class="constants">
    <tr><th>Name</th><th>Value</th><th>Description</th></tr>
    <% classmod.constants.each do |const| %>
      <% abbrev_value = const.value.chars.count > 20 ? "#{const.value.chars.first(20).join}..." : const.value %>
      <tr><td><%= const.name %></td><td style="font-family: monospace"><%= abbrev_value %></td><td><%= const.description %></td></tr>
    <% end %>
  </table>
<% end %>

<%############ Attributes #############%>
<% unless classmod.attributes.empty? %>
  <h2 id="attributes">Attributes</h2>
  <ul class="attribute-list">
    <% classmod.attributes.each do |attr| %>
      <li><strong><%= "#{attr.name}<sup>[#{attr.rw}]</sup>" %></strong><br/><%= attr.description %></li>
    <% end %>
  </ul>
<% end %>

<%############ Methods #############%>
<% methods_by_type = classmod.methods_by_type %>
<% ["class", "instance"].each do |type| %>                   <%# Yes, these are strings... %>
  <% [:public, :protected, :private].each do |visibility| %> <%# ...and these symbols. %>
    <%# Where there are no methods defined, there is no need for docs. %>
    <% next if methods_by_type[type].empty? %>
    <% next if methods_by_type[type][visibility].empty? %>

    <h2 id="<%= "#{visibility}-#{type}-methods" %>"><%= "#{visibility.capitalize} #{type.capitalize} Methods" %></h2>

    <% methods_by_type[type][visibility].each do |method| %>
      <div class="method <%= "#{visibility}-#{type}" %>" id="<%= method.aref %>">
        <div class="header">
          <%= method.arglists.gsub("\n", "<br/>") %>
        </div>
        <div class="description">
          <%= method.description %>

          <%# Source link and display %>
          <p class="show-source"><a href="#">[Show source]</a></p>
          <pre class="ruby" style="display: none">
<%= method.markup_code %>
          </pre>
        </div>
      </div>
    <% end %>
  <% end %>
<% end %>
